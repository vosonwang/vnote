buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-mobile')
	/*compile('org.springframework.boot:spring-boot-starter-security')*/
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')
}

jar {
	String someString = ''
	configurations.runtime.each {someString = someString + " lib//"+it.name}
	manifest {
		attributes 'Main-Class': 'com.xbs.AppMain'
		attributes 'Class-Path': someString
	}
}
//清除上次的编译过的文件
task clearPj(type:Delete){
	delete 'build','target'
}
task copyJar(type:Copy){
	from configurations.runtime
	into ('build/libs/lib')
}
//把JAR复制到目标目录
task release(type: Copy,dependsOn: [build,copyJar]) {
	//from 'conf'
	//into ('build/libs/vnote/conf') // 目标位置
}